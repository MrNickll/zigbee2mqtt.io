"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[55827],{73017:(e,t,o)=>{o.r(t),o.d(t,{data:()=>a});const a={key:"v-463482a9",path:"/devices/JT-BZ-01AQ_A.html",title:"Xiaomi JT-BZ-01AQ/A control via MQTT",lang:"en-US",frontmatter:{title:"Xiaomi JT-BZ-01AQ/A control via MQTT",description:"Integrate your Xiaomi JT-BZ-01AQ/A via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendors bridge or gateway.",addedAt:"2022-01-31T17:42:44.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"OTA updates",slug:"ota-updates",children:[]},{level:2,title:"Options",slug:"options",children:[]},{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Gas (binary)",slug:"gas-binary",children:[]},{level:3,title:"Gas_density (numeric)",slug:"gas-density-numeric",children:[]},{level:3,title:"Gas_sensitivity (enum)",slug:"gas-sensitivity-enum",children:[]},{level:3,title:"Selftest (enum)",slug:"selftest-enum",children:[]},{level:3,title:"Test (binary)",slug:"test-binary",children:[]},{level:3,title:"Mute_buzzer (enum)",slug:"mute-buzzer-enum",children:[]},{level:3,title:"Mute (binary)",slug:"mute-binary",children:[]},{level:3,title:"Switch",slug:"switch",children:[]},{level:3,title:"State (binary)",slug:"state-binary",children:[]},{level:3,title:"Power_outage_count (numeric)",slug:"power-outage-count-numeric",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/JT-BZ-01AQ_A.md",git:{updatedTime:1643818659e3}}},38201:(e,t,o)=>{o.r(t),o.d(t,{default:()=>h});var a=o(66252);const i=(0,a.uE)('<h1 id="xiaomi-jt-bz-01aq-a" tabindex="-1"><a class="header-anchor" href="#xiaomi-jt-bz-01aq-a" aria-hidden="true">#</a> Xiaomi JT-BZ-01AQ/A</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Model</td><td>JT-BZ-01AQ/A</td></tr><tr><td>Vendor</td><td>Xiaomi</td></tr><tr><td>Description</td><td>Aqara smart natural gas detector</td></tr><tr><td>Exposes</td><td>gas, gas_density, gas_sensitivity, selftest, test, mute_buzzer, mute, switch (state), state, power_outage_count, linkquality</td></tr><tr><td>Picture</td><td><img src="https://www.zigbee2mqtt.io/images/devices/JT-BZ-01AQ-A.jpg" alt="Xiaomi JT-BZ-01AQ/A"></td></tr></tbody></table><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates" aria-hidden="true">#</a> OTA updates</h2>',3),s=(0,a.Uk)("This device supports OTA updates, for more information see "),d=(0,a.Uk)("OTA updates"),u=(0,a.Uk)("."),r=(0,a._)("h2",{id:"options",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#options","aria-hidden":"true"},"#"),(0,a.Uk)(" Options")],-1),c=(0,a.Uk)("How to use device type specific configuration"),n=(0,a.uE)('<ul><li><p><code>temperature_precision</code>: Number of digits after decimal point for temperature, takes into effect on next report of device. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>temperature_calibration</code>: Calibrates the temperature value (absolute offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>illuminance_precision</code>: Number of digits after decimal point for illuminance, takes into effect on next report of device. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>illuminance_calibration</code>: Calibrates the illuminance value (percentual offset), takes into effect on next report of device. The value must be a number.</p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="gas-binary" tabindex="-1"><a class="header-anchor" href="#gas-binary" aria-hidden="true">#</a> Gas (binary)</h3><p>Indicates whether the device detected gas. Value can be found in the published state on the <code>gas</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;gas&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. If value equals <code>true</code> gas is ON, if <code>false</code> OFF.</p><h3 id="gas-density-numeric" tabindex="-1"><a class="header-anchor" href="#gas-density-numeric" aria-hidden="true">#</a> Gas_density (numeric)</h3><p>Value of gas concentration. Value can be found in the published state on the <code>gas_density</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;gas_density&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The unit of this value is <code>%LEL</code>.</p><h3 id="gas-sensitivity-enum" tabindex="-1"><a class="header-anchor" href="#gas-sensitivity-enum" aria-hidden="true">#</a> Gas_sensitivity (enum)</h3><p>Gas concentration value at which an alarm is triggered (&quot;10%LEL&quot; is more sensitive than &quot;15%LEL&quot;). Value can be found in the published state on the <code>gas_sensitivity</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;gas_sensitivity&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;gas_sensitivity&quot;: NEW_VALUE}</code>. The possible values are: <code>10%LEL</code>, <code>15%LEL</code>.</p><h3 id="selftest-enum" tabindex="-1"><a class="header-anchor" href="#selftest-enum" aria-hidden="true">#</a> Selftest (enum)</h3><p>Starts the self-test process (checking the indicator light and buzzer work properly). Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;selftest&quot;: NEW_VALUE}</code>. The possible values are: <code>Test</code>.</p><h3 id="test-binary" tabindex="-1"><a class="header-anchor" href="#test-binary" aria-hidden="true">#</a> Test (binary)</h3><p>Self-test in progress. Value can be found in the published state on the <code>test</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> test is ON, if <code>false</code> OFF.</p><h3 id="mute-buzzer-enum" tabindex="-1"><a class="header-anchor" href="#mute-buzzer-enum" aria-hidden="true">#</a> Mute_buzzer (enum)</h3><p>Mute the buzzer for 10 minutes (buzzer cannot be pre-muted, because this function only works when the alarm is triggered). Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;mute_buzzer&quot;: NEW_VALUE}</code>. The possible values are: <code>Mute</code>.</p><h3 id="mute-binary" tabindex="-1"><a class="header-anchor" href="#mute-binary" aria-hidden="true">#</a> Mute (binary)</h3><p>Buzzer muted. Value can be found in the published state on the <code>mute</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;mute&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. If value equals <code>true</code> mute is ON, if <code>false</code> OFF.</p><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> Switch</h3><p>The current state of this switch is in the published state under the <code>linkage_alarm</code> property (value is <code>true</code> or <code>false</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;linkage_alarm&quot;: &quot;true&quot;}</code>, <code>{&quot;linkage_alarm&quot;: &quot;false&quot;}</code> or <code>{&quot;linkage_alarm&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;linkage_alarm&quot;: &quot;&quot;}</code>.</p><h3 id="state-binary" tabindex="-1"><a class="header-anchor" href="#state-binary" aria-hidden="true">#</a> State (binary)</h3><p>&quot;Preparation&quot; or &quot;work&quot; (measurement of the gas concentration value and triggering of an alarm are only performed in the &quot;work&quot; state). Value can be found in the published state on the <code>state</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. If value equals <code>preparation</code> state is ON, if <code>work</code> OFF.</p><h3 id="power-outage-count-numeric" tabindex="-1"><a class="header-anchor" href="#power-outage-count-numeric" aria-hidden="true">#</a> Power_outage_count (numeric)</h3><p>Number of power outages (since last pairing). Value can be found in the published state on the <code>power_outage_count</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;power_outage_count&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',24),l={},h=(0,o(83744).Z)(l,[["render",function(e,t){const o=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[i,(0,a._)("p",null,[s,(0,a.Wm)(o,{to:"/guide/usage/ota_updates.html"},{default:(0,a.w5)((()=>[d])),_:1}),u]),r,(0,a._)("p",null,[(0,a._)("em",null,[(0,a.Wm)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,a.w5)((()=>[c])),_:1})])]),n],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[o,a]of t)e[o]=a;return e}}}]);